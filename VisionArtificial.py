import streamlit as st
import cv2
import os
from datetime import datetime
from PIL import Image
import numpy as np

# === CONFIGURACI√ìN GENERAL ===
st.set_page_config(page_title="DAPCTER", page_icon="üõ∞Ô∏è", layout="wide")

st.title("DAPCTER - Sistema de Detecci√≥n y Procesamiento A√©reo")
st.write("Aplicaci√≥n para conectar, capturar y procesar im√°genes t√©rmicas de paneles solares.")

# === MEN√ö DE PESTA√ëAS ===
tabs = st.tabs(["Conexi√≥n", "Vuelo", "Procesamiento"])

# ===============================================================
# 1Ô∏è‚É£ Pesta√±a de Conexi√≥n
# ===============================================================
with tabs[0]:
    st.header("Conexi√≥n del Sistema")
    st.markdown("""
    En esta secci√≥n puedes conectar el transmisor con la c√°mara y realizar una prueba de video.
    """)

    iniciar = st.button("Iniciar conexi√≥n")
    if iniciar:
        st.success("Transmisor conectado correctamente.")
        st.info("La c√°mara est√° lista para transmitir video.")

    # Simulaci√≥n de vista previa
    camara_activa = st.checkbox("Mostrar vista previa de c√°mara")
    if camara_activa:
        st.image("https://via.placeholder.com/640x360?text=Vista+Previa+de+la+C√°mara",
                 caption="Simulaci√≥n de transmisi√≥n")

# ===============================================================
# 2Ô∏è‚É£ Pesta√±a de Vuelo
# ===============================================================
with tabs[1]:
    st.header("Vuelo y Captura de Im√°genes")

    col1, col2 = st.columns(2)
    with col1:
        st.subheader("Visualizaci√≥n en vivo")
        st.image("https://via.placeholder.com/640x360?text=C√°mara+en+vivo")

        if st.button("Tomar captura"):
            fecha = datetime.now().strftime("%Y%m%d_%H%M%S")
            st.success(f"Captura guardada como captura_{fecha}.jpg")

    with col2:
        st.subheader("Revisi√≥n de capturas")
        uploaded_files = st.file_uploader("Importar capturas", type=["jpg", "png"], accept_multiple_files=True)

        if uploaded_files:
            for img_file in uploaded_files:
                img = Image.open(img_file)
                st.image(img, caption=f"Imagen: {img_file.name}", use_container_width=True)

    st.info("Cuando termines de revisar, pasa a la pesta√±a de procesamiento.")

# ===============================================================
# 3Ô∏è‚É£ Pesta√±a de Procesamiento
# ===============================================================
with tabs[2]:
    st.header("Procesamiento de Im√°genes")

    st.markdown("Sube tus im√°genes para procesarlas y generar el reporte en PDF.")

    uploaded_files_proc = st.file_uploader("Seleccionar im√°genes a procesar", type=["jpg", "png"], accept_multiple_files=True)

    if st.button("Iniciar procesamiento"):
        if uploaded_files_proc:
            progress = st.progress(0)
            for i, img_file in enumerate(uploaded_files_proc):
                # Simulaci√≥n del procesamiento
                progress.progress((i + 1) / len(uploaded_files_proc))
            st.success("Procesamiento finalizado")
            st.download_button("Descargar reporte PDF", "Reporte_DAPCTER.pdf")
        else:
            st.warning("Por favor sube im√°genes antes de procesar.")
